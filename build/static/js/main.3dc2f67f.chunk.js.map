{"version":3,"sources":["contexts/UserContext.js","assets/cursors/normal.cur","assets/cursors/clickable.cur","globalStyles.js","components/PreGame/Splash/styles.js","assets/images/winxp-logo.webp","assets/images/microsoft-logo.webp","components/PreGame/Splash/index.js","utils/soundUtils.js","assets/audios/cannot-deal.ogg","assets/audios/deal.ogg","assets/audios/hint.ogg","assets/audios/mouse-down.ogg","assets/audios/mouse-up.ogg","assets/audios/no-hint.ogg","assets/audios/opening.ogg","assets/audios/shutdown.ogg","assets/audios/win.ogg","assets/cursors/cannot-clickable.cur","assets/cursors/beam.cur","components/PreGame/UserAccount/styles.js","assets/images/account-image.webp","components/PreGame/UserAccount/index.js","components/PreGame/Login/styles.js","assets/images/winxp-shutdown.webp","assets/images/login-logo.webp","components/PreGame/Login/index.js","views/Introduction/styles.js","views/Introduction/index.js","utils/cardUtils.js","assets/images/cards/card-back.webp","assets/images/cards/1.webp","assets/images/cards/2.webp","assets/images/cards/3.webp","assets/images/cards/4.webp","assets/images/cards/5.webp","assets/images/cards/6.webp","assets/images/cards/7.webp","assets/images/cards/8.webp","assets/images/cards/9.webp","assets/images/cards/10.webp","assets/images/cards/11.webp","assets/images/cards/12.webp","assets/images/cards/13.webp","contexts/GameContext.js","contexts/DesktopContext.js","contexts/HintContext.js","contexts/DraggingContext.js","components/PreGame/WindowMenu/styles.js","components/PreGame/WindowMenu/index.js","assets/images/close.webp","assets/images/close-hover.webp","assets/images/close-active.webp","components/PreGame/Window/styles.js","assets/images/solitaire-icon.webp","components/PreGame/Window/index.js","components/Game/GameOver/styles.js","components/Game/GameOver/index.js","components/Game/Card/styles.js","components/Game/Card/index.js","components/Game/Deck/styles.js","components/Game/Deck/index.js","components/Game/DeckArea/styles.js","components/Game/DeckArea/index.js","components/Game/CompletedArea/styles.js","components/Game/CompletedArea/index.js","components/Game/HintArea/styles.js","components/Game/HintArea/index.js","components/Game/DealArea/styles.js","components/Game/DealArea/index.js","views/SolitaireGame/styles.js","views/SolitaireGame/index.js","components/PreGame/Program/styles.js","components/PreGame/Program/index.js","utils/dateUtils.js","components/PreGame/Toolbar/styles.js","assets/images/msn-icon.webp","components/PreGame/Toolbar/index.js","components/PreGame/Taskbar/styles.js","assets/images/winxp-start-button.webp","components/PreGame/Taskbar/index.js","views/Desktop/styles.js","views/Desktop/index.js","App.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","children","useState","username","user","setUser","isUserSelected","setIsUserSelected","useEffect","sessionStoragedUser","sessionStorage","getItem","JSON","parse","setItem","stringify","Provider","value","colors","whiteA03","white","yellow","black","lightBlue","blue","darkBlue","navyBlue","orange","beige","pink","aqua","transparent","green","brightGreen","theme","taskBg","loginScreenText","loginScreenHeaderBg","loginScreenFooterText","loginScreenFooterBg","loginScreenTextColor","buttonBg","buttonText","xpWindowBg","titleBarText","hintAreaBg","hintAreaText","subMenuButtonText","subMenuButtonText$hover","subMenuButtonBg$hover","menuButtonText","menuButtonBg$hover","menuButtonText$hover","menuBg","menuBarBg","toolbarText","taskBg$hover","loaderBorder","splashScreenText","splashScreenBg","loginAccountInputText","loginAccountInputBg","loginAccountText","loginAccountBorder$hover","windowBorder","gradients","barBg","loginScreenFooterBorderColor","loginScreenHeaderBorderColor","loginScreenMiddleBorderColor","titleBarBg","loginScreenMainBg","toolbarBg","taskbarBg","keyFrames","loadingKeyFrame","keyframes","colorChange","red","boxShadows","emptyDeck","task","windowButton$hover","windowButton$active","breakpoints","smallTablet","styledComponents","Button","styled","button","ClickableCursor","Screen","div","NormalCursor","SplashScreen","Main","main","Logo","img","Loader","Bars","Bar","Footer","footer","FooterLogo","Splash","src","WindowsXPLogo","width","height","alt","MicrosoftLogo","audios","deal","hint","opening","shutdown","win","getSounds","soundPlayFunctions","soundList","forEach","soundName","push","Audio","UserAccount","$isGuest","$isUsernameWritten","CanNotCursor","BeamCursor","Avatar","isGuest","useContext","usernameInputText","setUsernameInputText","openingSound","handleAccountClick","e","preventDefault","play","onClick","disabled","AccountImage","type","placeholder","stopPropagation","onChange","target","onKeyDown","key","LoginScreen","Header","header","MainLeft","section","MainRight","ShutdownButton","Login","shutdownSound","WindowsXPLogo2","WindowsXPShutdown","IntroductionScreen","Introduction","isOnSplash","setIsOnSplash","splashTimeout","setTimeout","clearTimeout","cardImages","cardNo","back","ace","two","three","four","five","siv","seven","eight","nine","ten","jack","queen","king","cardCounts","shuffle","array","copyArray","i","length","j","Math","floor","random","cardDecks","dealingCards","cannotDealSound","copyDealingDecks","Object","values","every","deck","cards","dealCards","pop","entries","shift","visibleCardCount","getRandomDecks","cardList","map","cardType","count","Array","fill","flat","shuffledCardList","deck1","slice","deck2","deck3","deck4","deck5","deck6","deck7","deck8","deck9","deck10","newGame","getIndexWhichNextCardsDraggable","nextCard","currentCard","visibleCardsStartingIndex","firstIndexOfOrderedCards","getHint","orderedCardLists","orderedCardListsFromDecks","startingIndex","getOrderedCardListsFromDecks","hints","sourceDeckNo","sourceDeck","subSourceDeckStartingIndex","destinationDeckNo","destinationDeck","sourceDeckId","destinationDeckId","sourceStartingIndex","destinationStartingIndex","GameContext","GameContextProvider","setCardDecks","dealingDecks","setDealingDecks","isAnyDragging","setIsAnyDragging","completedDeckCount","score","moves","gameStats","setGameStats","cDecks","dDecks","DesktopContext","DesktopContextProvider","isGameRunning","setIsGameRunning","HintContext","HintContextProvider","setHint","timeout","keys","DraggingContext","DraggingContextProvider","deckId","items","indicesOfSelectedCards","setIndicesOfSelectedCards","Menu","MenuItem","MenuButton","MenuContent","SubMenuButton","WindowMenu","dealSound","returnedCardDecks","returnDealingDecks","Window","TitleBar","CloseButton","CloseSVG","CloseHoverSVG","CloseActiveSVG","WindowBody","title","SolitaireIcon","WinScreen","Close","CloseHover","CloseActive","YesButton","GameOver","winSound","React","memo","CardContainer","Card","index","deckNo","isClose","isDragDisabled","isInSelectedCards","isSourceInHint","isDestinationInHint","mouseDownSound","handleMouseDownFromCard","getStyle","style","snapshot","isDropAnimating","transitionDuration","isDragging","display","transform","filter","transition","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","onMouseDown","undefined","className","draggable","Deck","deckLength","Placeholder","indexWhichNextCardsDraggable","droppableId","droppableProps","viewBox","includes","DeckArea","onDragEnd","result","source","destination","sourceCardIndex","destinationCardIndex","selectedCardList","splice","parentCardNo","isDragSuccessful","isThereACompletedDeck","join","newCardDecks","moveCards","previousGameStats","onDragStart","from","_","no","CompletedDeckArea","Children","toArray","HintArea","Hint","hintSound","noHintSound","DealArea","dealingDecksLength","returnCardDecks","Board","process","BottomArea","SolitaireGame","Program","handleProgramClick","onDoubleClick","onTouchStart","getTimeAsAMPM","date","Date","hours","getHours","minutes","getMinutes","ampm","Toolbar","time","setTime","timeInterval","setInterval","clearInterval","MsnIcon","Taskbar","StartButton","TaskList","Task","XpStartButton","Desktop","ProgramContainer","ProgramList","App","id","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dc2f67f.chunk.js","sourcesContent":["// Libraries\r\nimport React, { useState, useEffect, createContext } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = (props) => {\r\n  const { children } = props;\r\n\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n  });\r\n  const [isUserSelected, setIsUserSelected] = useState(false);\r\n\r\n  /*\r\n  ====================================================\r\n  ================== USE EFFECT ======================\r\n  ====================================================\r\n  */\r\n\r\n  useEffect(() => {\r\n    const sessionStoragedUser = sessionStorage.getItem('user');\r\n\r\n    if (\r\n      sessionStoragedUser &&\r\n      sessionStoragedUser.username !== 'Guest'\r\n    ) {\r\n      setUser(JSON.parse(sessionStoragedUser));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem('user', JSON.stringify(user));\r\n  }, [user]);\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{ user, setUser, isUserSelected, setIsUserSelected }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","export default __webpack_public_path__ + \"static/media/normal.85d4fca4.cur\";","export default __webpack_public_path__ + \"static/media/clickable.8631aaab.cur\";","import styled, { keyframes } from 'styled-components';\r\nimport NormalCursor from './assets/cursors/normal.cur';\r\nimport ClickableCursor from './assets/cursors/clickable.cur';\r\n\r\n// COLOR CODES\r\nconst colors = {\r\n  whiteA03: 'rgba(255, 255, 255, 0.3)',\r\n  white: 'rgb(255, 255, 255)',\r\n  yellow: 'rgb(255,255,0)',\r\n  black: 'rgb(0,0,0)',\r\n  lightBlue: 'rgb(83, 163, 255)',\r\n  blue: 'rgb(80, 143, 217)',\r\n  darkBlue: 'rgb(49, 106, 197)',\r\n  navyBlue: 'rgb(0, 77, 163)',\r\n  orange: 'rgb(240, 150, 68)',\r\n  beige: 'rgb(236, 233, 216)',\r\n  pink: 'rgb(255, 38, 231)',\r\n  aqua: 'rgb(0, 171, 246)',\r\n  transparent: 'transparent',\r\n  green: 'rgb(0,128,0)',\r\n  brightGreen: '#00DB02',\r\n};\r\n\r\n// THEME\r\nexport const theme = {\r\n  // COLORS\r\n  colors: {\r\n    taskBg: colors.blue,\r\n    loginScreenText: colors.white,\r\n    loginScreenHeaderBg: colors.navyBlue,\r\n    loginScreenFooterText: colors.white,\r\n    loginScreenFooterBg: colors.navyBlue,\r\n    loginScreenTextColor: colors.white,\r\n    buttonBg: colors.white,\r\n    buttonText: colors.black,\r\n    xpWindowBg: colors.beige,\r\n    titleBarText: colors.white,\r\n    hintAreaBg: colors.green,\r\n    hintAreaText: colors.white,\r\n    subMenuButtonText: colors.black,\r\n    subMenuButtonText$hover: colors.white,\r\n    subMenuButtonBg$hover: colors.darkBlue,\r\n    menuButtonText: colors.black,\r\n    menuButtonBg$hover: colors.darkBlue,\r\n    menuButtonText$hover: colors.white,\r\n    menuBg: colors.beige,\r\n    menuBarBg: colors.beige,\r\n    toolbarText: colors.white,\r\n    taskBg$hover: colors.lightBlue,\r\n    loaderBorder: colors.white,\r\n    splashScreenText: colors.white,\r\n    splashScreenBg: colors.black,\r\n    loginAccountInputText: colors.white,\r\n    loginAccountInputBg: colors.transparent,\r\n    loginAccountText: colors.white,\r\n    loginAccountBorder$hover: colors.yellow,\r\n    windowBorder: colors.blue,\r\n  },\r\n\r\n  // GRADIENTS\r\n  gradients: {\r\n    barBg: `\r\n      linear-gradient(\r\n        to bottom,\r\n        #222e9d,\r\n        #3043d5,\r\n        #5f80fc,\r\n        #6f8dfd,\r\n        #859ffe,\r\n        #8da6ff,\r\n        #5b7af9,\r\n        #3346d7,\r\n        #2d3ed2\r\n      )\r\n    `,\r\n    loginScreenFooterBorderColor: `\r\n      linear-gradient(\r\n        90deg,\r\n        ${colors.navyBlue} 0%,\r\n        ${colors.orange} 50%,\r\n        ${colors.navyBlue} 100%\r\n      )\r\n    `,\r\n    loginScreenHeaderBorderColor: `\r\n      linear-gradient(\r\n        90deg,\r\n        transparent 0%,\r\n        rgba(255, 255, 255, 0.8) 30%,\r\n        rgba(255, 255, 255, 0.9) 50%,\r\n        rgba(255, 255, 255, 0.8) 70%,\r\n        transparent 100%\r\n      )\r\n    `,\r\n    loginScreenMiddleBorderColor: `\r\n      linear-gradient(\r\n        180deg,\r\n        rgba(255, 255, 255, 0) 0%,\r\n        rgba(255, 255, 255, 0) 5%,\r\n        rgba(255, 255, 255, 0.5) 15%,\r\n        rgba(255, 255, 255, 0.5) 50%,\r\n        rgba(255, 255, 255, 0.5) 85%,\r\n        rgba(255, 255, 255, 0) 95%,\r\n        rgba(255, 255, 255, 0) 100%\r\n      )\r\n    `,\r\n    titleBarBg: `\r\n      linear-gradient(\r\n        180deg,\r\n        rgba(9, 151, 255, 1) 0%,\r\n        rgba(0, 83, 238, 1) 8%,\r\n        rgba(0, 80, 238, 1) 40%,\r\n        rgba(0, 102, 255, 1) 88%,\r\n        rgba(0, 102, 255, 1) 93%,\r\n        rgba(0, 91, 255, 1) 95%,\r\n        rgba(0, 61, 215, 1) 96%,\r\n        rgba(0, 61, 215, 1) 100%\r\n      )\r\n    `,\r\n    loginScreenMainBg: `\r\n      linear-gradient(\r\n        130deg,\r\n        rgba(221, 221, 221, 1) 0%,\r\n        rgba(80, 143, 217, 1) 35%,\r\n        rgba(80, 143, 217, 1) 100%\r\n      )\r\n    `,\r\n    toolbarBg: `\r\n      linear-gradient(\r\n        rgb(12, 89, 185) 1%,\r\n        rgb(19, 158, 233) 6%,\r\n        rgb(24, 181, 242) 10%,\r\n        rgb(19, 155, 235) 14%,\r\n        rgb(18, 144, 232) 19%,\r\n        rgb(13, 141, 234) 63%,\r\n        rgb(13, 159, 241) 81%,\r\n        rgb(15, 158, 237) 88%,\r\n        rgb(17, 155, 233) 91%,\r\n        rgb(19, 146, 226) 94%,\r\n        rgb(19, 126, 215) 97%,\r\n        rgb(9, 91, 201) 100%\r\n      )\r\n    `,\r\n    taskbarBg: `\r\n      linear-gradient(\r\n        rgb(31, 47, 134) 0px,\r\n        rgb(49, 101, 196) 3%,\r\n        rgb(54, 130, 229) 6%,\r\n        rgb(68, 144, 230) 10%,\r\n        rgb(56, 131, 229) 12%,\r\n        rgb(43, 113, 224) 15%,\r\n        rgb(38, 99, 218) 18%,\r\n        rgb(35, 91, 214) 20%,\r\n        rgb(34, 88, 213) 23%,\r\n        rgb(33, 87, 214) 38%,\r\n        rgb(36, 93, 219) 54%,\r\n        rgb(37, 98, 223) 86%,\r\n        rgb(36, 95, 220) 89%,\r\n        rgb(33, 88, 212) 92%,\r\n        rgb(29, 78, 192) 95%,\r\n        rgb(25, 65, 165) 98%\r\n      )\r\n    `,\r\n  },\r\n\r\n  // KEY FRAMES\r\n  keyFrames: {\r\n    loadingKeyFrame: keyframes`\r\n      0% {\r\n        transform: translate(-40px);\r\n      }\r\n      100% {\r\n        transform: translate(200px);\r\n      }\r\n    `,\r\n    colorChange: keyframes`\r\n      0% {\r\n        color: ${colors.red};\r\n      }\r\n      20% {\r\n        color: ${colors.yellow};\r\n      }\r\n      40% { \r\n        color: ${colors.brightGreen};\r\n      }\r\n      60% { \r\n        color: ${colors.aqua}; \r\n      }\r\n      80% { \r\n        color: ${colors.navyBlue}; \r\n      }\r\n      100% { \r\n        color: ${colors.pink}; \r\n      }\r\n    `,\r\n  },\r\n\r\n  // BOX SHADOWS\r\n  boxShadows: {\r\n    emptyDeck: `inset 0 0 0 2px ${colors.white}`,\r\n    task: `${colors.black} 1px 0px 1px, ${colors.whiteA03} 1px 1px 1px inset`,\r\n    windowButton$hover: `${colors.orange} 0px 0px 0px 1px inset`,\r\n    windowButton$active: `${colors.blue} 0px 0px 0px 1px inset`,\r\n  },\r\n\r\n  // SCREEN BREAKPOINTS\r\n  breakpoints: {\r\n    smallTablet: '600px',\r\n  },\r\n};\r\n\r\n// GLOBAL STYLED COMPONENTS\r\nexport const styledComponents = {\r\n  Button: styled.button`\r\n    background: transparent;\r\n    border: 0;\r\n    color: white;\r\n\r\n    &:not(:disabled):hover {\r\n      cursor: url(${ClickableCursor}), auto;\r\n    }\r\n  `,\r\n  Screen: styled.div`\r\n    height: 100%;\r\n    cursor: url(${NormalCursor}), auto;\r\n    overflow: hidden;\r\n  `,\r\n};\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Components | Utils\r\nimport { styledComponents } from '../../../globalStyles';\r\n\r\nexport const SplashScreen = styled(styledComponents.Screen)`\r\n  background-color: ${(props) => props.theme.colors.splashScreenBg};\r\n  padding: 7px 33px;\r\n  color: ${(props) => props.theme.colors.splashScreenText};\r\n  cursor: none;\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  // main = fullHeight - footer - top and bottom padding\r\n  height: calc(100% - 60px - 14px);\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  margin-bottom: 70px;\r\n  max-width: 300px;\r\n  width: 50vw;\r\n  height: auto;\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n  border: 1px solid ${(props) => props.theme.colors.loaderBorder};\r\n  border-radius: 5px;\r\n  height: 20px;\r\n  overflow: hidden;\r\n  padding: 2px 1px;\r\n  width: 200px;\r\n`;\r\n\r\nexport const Bars = styled.div`\r\n  align-items: center;\r\n  animation: ${(props) => props.theme.keyFrames.loadingKeyFrame} 2s\r\n    linear infinite;\r\n  display: flex;\r\n  gap: 3px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Bar = styled.div`\r\n  background: ${(props) => props.theme.gradients.barBg};\r\n  height: 100%;\r\n  width: 10px;\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 0.7em;\r\n  height: 60px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const FooterLogo = styled.img`\r\n  filter: invert(100%); // black logo -> white logo\r\n  height: 60px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/winxp-logo.9dee7f33.webp\";","export default __webpack_public_path__ + \"static/media/microsoft-logo.63a04c35.webp\";","// Libraries\r\nimport React from 'react';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport WindowsXPLogo from '../../../assets/images/winxp-logo.webp';\r\nimport MicrosoftLogo from '../../../assets/images/microsoft-logo.webp';\r\n\r\nconst Splash = () => {\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.SplashScreen>\r\n      <Styled.Main>\r\n        <Styled.Logo\r\n          src={WindowsXPLogo}\r\n          width=\"300\"\r\n          height=\"205\"\r\n          alt=\"windows xp logo\"\r\n        />\r\n        <Styled.Loader>\r\n          <Styled.Bars>\r\n            <Styled.Bar />\r\n            <Styled.Bar />\r\n            <Styled.Bar />\r\n          </Styled.Bars>\r\n        </Styled.Loader>\r\n      </Styled.Main>\r\n      <Styled.Footer>\r\n        <span>Copyright © Microsoft Corporation</span>\r\n        <Styled.FooterLogo\r\n          src={MicrosoftLogo}\r\n          width=\"120\"\r\n          height=\"60\"\r\n          alt=\"microsoft logo\"\r\n        />\r\n      </Styled.Footer>\r\n    </Styled.SplashScreen>\r\n  );\r\n};\r\n\r\nexport default Splash;\r\n","// Assets\r\nimport CannotDealSound from '../assets/audios/cannot-deal.ogg';\r\nimport DealSound from '../assets/audios/deal.ogg';\r\nimport HintSound from '../assets/audios/hint.ogg';\r\nimport MouseDownSound from '../assets/audios/mouse-down.ogg';\r\nimport MouseUpSound from '../assets/audios/mouse-up.ogg';\r\nimport NoHintSound from '../assets/audios/no-hint.ogg';\r\nimport OpeningSound from '../assets/audios/opening.ogg';\r\nimport ShutdownSound from '../assets/audios/shutdown.ogg';\r\nimport WinSound from '../assets/audios/win.ogg';\r\n\r\nconst audios = {\r\n  'cannot-deal': CannotDealSound,\r\n  deal: DealSound,\r\n  hint: HintSound,\r\n  'mouse-down': MouseDownSound,\r\n  'mouse-up': MouseUpSound,\r\n  'no-hint': NoHintSound,\r\n  opening: OpeningSound,\r\n  shutdown: ShutdownSound,\r\n  win: WinSound,\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Returns playable Audio objects of the given sound\r\n  Return value: Array\r\n  ====================================================\r\n*/\r\n\r\nexport default function getSounds(...soundList) {\r\n  const soundPlayFunctions = [];\r\n\r\n  soundList.forEach((soundName) => {\r\n    soundPlayFunctions.push(new Audio(audios[soundName]));\r\n  });\r\n\r\n  return soundPlayFunctions;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cannot-deal.719a6f61.ogg\";","export default __webpack_public_path__ + \"static/media/deal.d303474b.ogg\";","export default __webpack_public_path__ + \"static/media/hint.14af02d0.ogg\";","export default __webpack_public_path__ + \"static/media/mouse-down.2c3d79bd.ogg\";","export default __webpack_public_path__ + \"static/media/mouse-up.58aa9060.ogg\";","export default __webpack_public_path__ + \"static/media/no-hint.2b127c57.ogg\";","export default __webpack_public_path__ + \"static/media/opening.f12b1f09.ogg\";","export default __webpack_public_path__ + \"static/media/shutdown.ee31f59a.ogg\";","export default __webpack_public_path__ + \"static/media/win.fc702605.ogg\";","export default __webpack_public_path__ + \"static/media/cannot-clickable.82628c61.cur\";","export default __webpack_public_path__ + \"static/media/beam.80b9bea2.cur\";","// Libraries\r\nimport styled from 'styled-components';\r\n// Components | Utils\r\nimport { styledComponents } from '../../../globalStyles';\r\n// Assets\r\nimport CanNotCursor from '../../../assets/cursors/cannot-clickable.cur';\r\nimport BeamCursor from '../../../assets/cursors/beam.cur';\r\n\r\nexport const UserAccount = styled(styledComponents.Button)`\r\n  align-items: center;\r\n  color: white;\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  gap: 10px;\r\n  opacity: 0.6;\r\n\r\n  &:hover {\r\n    cursor: ${(props) =>\r\n      !props.$isGuest &&\r\n      !props.$isUsernameWritten &&\r\n      `url(${CanNotCursor}), pointer`};\r\n    opacity: 1;\r\n    transition: opacity 400ms;\r\n  }\r\n\r\n  input {\r\n    background: transparent;\r\n    border: 0;\r\n    color: white;\r\n    font-size: 1.3rem;\r\n    height: 30px;\r\n    outline: 0;\r\n\r\n    &:hover {\r\n      cursor: url(${BeamCursor}), pointer;\r\n    }\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    display: none;\r\n  }\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    &:nth-child(2) {\r\n      display: flex;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  border: 2px solid white;\r\n  border-radius: 5px;\r\n  height: 60px;\r\n  width: 60px;\r\n\r\n  &:hover {\r\n    border-color: yellow;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/account-image.20ce40ff.webp\";","// Libraries\r\nimport React, { useState, useContext } from 'react';\r\n// Components | Utils\r\nimport { UserContext } from '../../../contexts/UserContext';\r\nimport getSounds from '../../../utils/soundUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport AccountImage from '../../../assets/images/account-image.webp';\r\n\r\nconst UserAccount = (props) => {\r\n  const { isGuest } = props;\r\n\r\n  const { user, setUser, setIsUserSelected } =\r\n    useContext(UserContext);\r\n  const [usernameInputText, setUsernameInputText] = useState(\r\n    user.username\r\n  );\r\n\r\n  const [openingSound] = getSounds('opening');\r\n\r\n  /*\r\n  ====================================================\r\n  =================== HANDLER ========================\r\n  ====================================================\r\n  */\r\n\r\n  const handleAccountClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    setUser(\r\n      isGuest\r\n        ? { ...user, username: 'Guest' }\r\n        : { ...user, username: usernameInputText }\r\n    );\r\n\r\n    setIsUserSelected(true);\r\n    openingSound.play();\r\n  };\r\n\r\n  // For the button not to be clicked when I click the input\r\n  const handleInputClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    setUsernameInputText(e.target.value);\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.UserAccount\r\n      data-cy={isGuest ? 'login-account' : 'login-account-guest'}\r\n      $isGuest={isGuest}\r\n      $isUsernameWritten={\r\n        usernameInputText && usernameInputText !== 'Guest'\r\n      }\r\n      onClick={handleAccountClick}\r\n      disabled={\r\n        !isGuest &&\r\n        usernameInputText === 'Guest' &&\r\n        usernameInputText !== ''\r\n      }\r\n    >\r\n      <Styled.Avatar\r\n        src={AccountImage}\r\n        alt=\"avatar\"\r\n        width=\"60\"\r\n        height=\"60\"\r\n      />\r\n      {isGuest ? (\r\n        <span>Guest</span>\r\n      ) : (\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Or write your username\"\r\n          value={\r\n            usernameInputText === 'Guest' ? '' : usernameInputText\r\n          }\r\n          onClick={handleInputClick}\r\n          onChange={handleTextChange}\r\n          onKeyDown={(e) =>\r\n            e.key === 'Enter' && handleAccountClick(e)\r\n          }\r\n        />\r\n      )}\r\n    </Styled.UserAccount>\r\n  );\r\n};\r\n\r\nexport default UserAccount;\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Components | Utils\r\nimport { styledComponents } from '../../../globalStyles';\r\n\r\nexport const LoginScreen = styled(styledComponents.Screen)`\r\n  color: ${(props) => props.theme.colors.loginScreenTextColor};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  background-color: ${(props) =>\r\n    props.theme.colors.loginScreenHeaderBg};\r\n  border-bottom: 3px solid;\r\n  border-image-slice: 1;\r\n  border-image-source: ${(props) =>\r\n    props.theme.gradients.loginScreenHeaderBorderColor};\r\n  height: 90px;\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  background: ${(props) => props.theme.gradients.loginScreenMainBg};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 2fr 1fr;\r\n  // main = fullHeight - header - footer\r\n  height: calc(100% - 90px - 130px);\r\n  padding: 20px;\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr;\r\n  }\r\n`;\r\n\r\nexport const MainLeft = styled.section`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.9rem;\r\n  gap: 30px;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    align-items: flex-end;\r\n    border-image-slice: 0 1 0 0;\r\n    border-image-source: ${(props) =>\r\n      props.theme.gradients.loginScreenMiddleBorderColor};\r\n    border-right: 1px solid;\r\n    padding-right: 60px;\r\n  }\r\n\r\n  img {\r\n    width: 205px;\r\n    height: auto;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nexport const MainRight = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  width: minmax(70vw, 90vw);\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    padding-left: 30px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  align-items: center;\r\n  background-color: ${(props) =>\r\n    props.theme.colors.loginScreenFooterBg};\r\n  border-image-slice: 1;\r\n  border-image-source: ${(props) =>\r\n    props.theme.gradients.loginScreenFooterBorderColor};\r\n  border-top: 3px solid;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.7rem;\r\n  gap: 10px;\r\n  height: 130px;\r\n  padding: 20px 50px;\r\n  text-align: center;\r\n\r\n  p {\r\n    max-width: 450px;\r\n  }\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    flex-direction: row;\r\n    gap: 30px;\r\n    justify-content: space-between;\r\n    text-align: initial;\r\n  }\r\n`;\r\n\r\nexport const ShutdownButton = styled(styledComponents.Button)`\r\n  align-items: center;\r\n  display: flex;\r\n  gap: 10px;\r\n\r\n  img {\r\n    height: 25px;\r\n    width: 25px;\r\n  }\r\n\r\n  span {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/winxp-shutdown.ce8f45e9.webp\";","export default __webpack_public_path__ + \"static/media/login-logo.eb4729f1.webp\";","// Libraries\r\nimport React from 'react';\r\n// Components | Utils\r\nimport UserAccount from '../UserAccount';\r\nimport getSounds from '../../../utils/soundUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport WindowsXPShutdown from '../../../assets/images/winxp-shutdown.webp';\r\nimport WindowsXPLogo2 from '../../../assets/images/login-logo.webp';\r\n\r\nconst Login = () => {\r\n  const [shutdownSound] = getSounds('shutdown');\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.LoginScreen>\r\n      <Styled.Header />\r\n      <Styled.Main>\r\n        <Styled.MainLeft>\r\n          <img\r\n            src={WindowsXPLogo2}\r\n            alt=\"windows xp logo\"\r\n            width=\"205\"\r\n            height=\"118\"\r\n          />\r\n          <span>To begin, select your user</span>\r\n        </Styled.MainLeft>\r\n        <Styled.MainRight>\r\n          <UserAccount isGuest />\r\n          <UserAccount />\r\n        </Styled.MainRight>\r\n      </Styled.Main>\r\n      <Styled.Footer>\r\n        <div>\r\n          <Styled.ShutdownButton onClick={() => shutdownSound.play()}>\r\n            <img\r\n              src={WindowsXPShutdown}\r\n              alt=\"shutdown icon\"\r\n              height=\"25\"\r\n              width=\"25\"\r\n            />\r\n            <span>Turn off computer</span>\r\n          </Styled.ShutdownButton>\r\n        </div>\r\n        <p>\r\n          This XP cannot be turned off. After all these years we have\r\n          been away, we wouldnt want to close, would we? But out of\r\n          respect for you, I will play a shutdown sound.\r\n        </p>\r\n      </Styled.Footer>\r\n    </Styled.LoginScreen>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Components | Utils\r\nimport { styledComponents } from '../../globalStyles';\r\n\r\nexport const IntroductionScreen = styled(styledComponents.Screen)``;\r\n","// Libraries\r\nimport React, { useEffect, useState } from 'react';\r\n// Components | Utils\r\nimport Splash from '../../components/PreGame/Splash';\r\nimport Login from '../../components/PreGame/Login';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst Introduction = () => {\r\n  const [isOnSplash, setIsOnSplash] = useState(true);\r\n\r\n  /*\r\n  ====================================================\r\n  ================== USE EFFECT ======================\r\n  ====================================================\r\n  */\r\n\r\n  // Adds fake loading scene\r\n  useEffect(() => {\r\n    const splashTimeout = setTimeout(() => {\r\n      setIsOnSplash(false);\r\n    }, 2500);\r\n\r\n    return () => {\r\n      clearTimeout(splashTimeout);\r\n    };\r\n  }, []);\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.IntroductionScreen>\r\n      {isOnSplash ? <Splash /> : <Login />}\r\n    </Styled.IntroductionScreen>\r\n  );\r\n};\r\n\r\nexport default Introduction;\r\n","import CardBackImage from '../assets/images/cards/card-back.webp';\r\nimport CardImage1 from '../assets/images/cards/1.webp';\r\nimport CardImage2 from '../assets/images/cards/2.webp';\r\nimport CardImage3 from '../assets/images/cards/3.webp';\r\nimport CardImage4 from '../assets/images/cards/4.webp';\r\nimport CardImage5 from '../assets/images/cards/5.webp';\r\nimport CardImage6 from '../assets/images/cards/6.webp';\r\nimport CardImage7 from '../assets/images/cards/7.webp';\r\nimport CardImage8 from '../assets/images/cards/8.webp';\r\nimport CardImage9 from '../assets/images/cards/9.webp';\r\nimport CardImage10 from '../assets/images/cards/10.webp';\r\nimport CardImage11 from '../assets/images/cards/11.webp';\r\nimport CardImage12 from '../assets/images/cards/12.webp';\r\nimport CardImage13 from '../assets/images/cards/13.webp';\r\n\r\n/*\r\n  ====================================================\r\n  Paths of images of cards\r\n  ====================================================\r\n*/\r\n\r\nexport const cardImages = {\r\n  0: CardBackImage,\r\n  1: CardImage1,\r\n  2: CardImage2,\r\n  3: CardImage3,\r\n  4: CardImage4,\r\n  5: CardImage5,\r\n  6: CardImage6,\r\n  7: CardImage7,\r\n  8: CardImage8,\r\n  9: CardImage9,\r\n  10: CardImage10,\r\n  11: CardImage11,\r\n  12: CardImage12,\r\n  13: CardImage13,\r\n};\r\n\r\nexport const cardNo = {\r\n  back: 0,\r\n  ace: 1,\r\n  two: 2,\r\n  three: 3,\r\n  four: 4,\r\n  five: 5,\r\n  siv: 6,\r\n  seven: 7,\r\n  eight: 8,\r\n  nine: 9,\r\n  ten: 10,\r\n  jack: 11,\r\n  queen: 12,\r\n  king: 13,\r\n};\r\n\r\nexport const cardCounts = {\r\n  ace: 8,\r\n  two: 8,\r\n  three: 8,\r\n  four: 8,\r\n  five: 8,\r\n  siv: 8,\r\n  seven: 8,\r\n  eight: 8,\r\n  nine: 8,\r\n  ten: 8,\r\n  jack: 8,\r\n  queen: 8,\r\n  king: 8,\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Get index by card name\r\n  Return value: Integer\r\n  ====================================================\r\n*/\r\n\r\nexport const getCardNo = (name) => {\r\n  return cardNo[name];\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Shuffle the deck with the Fisher algorithm.\r\n  Return value: Array\r\n  ====================================================\r\n*/\r\n\r\nexport const shuffle = (array) => {\r\n  const copyArray = [...array];\r\n\r\n  for (let i = copyArray.length - 1; i > 0; i -= 1) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [copyArray[i], copyArray[j]] = [copyArray[j], copyArray[i]];\r\n  }\r\n  return copyArray;\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Checks if there is a completed card sequence in the deck.\r\n  Return value: Boolean\r\n  ====================================================\r\n*/\r\n\r\nexport const checkCompletedDeck = (cards) => {\r\n  const completedDeck = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\r\n  return cards.join().includes(completedDeck.join());\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Moves cards from one deck to another.\r\n  Return value: Object\r\n  ====================================================\r\n*/\r\n\r\nexport const moveCards = (cardDecks, source, destination) => {\r\n  // Information of source deck.\r\n  const sourceCardIndex = source.index;\r\n  const sourceDeckId = source.droppableId;\r\n  const sourceDeck = { ...cardDecks[sourceDeckId] };\r\n\r\n  // Information of destination deck.\r\n  const destinationCardIndex = destination.index;\r\n  const destinationDeckId = destination.droppableId;\r\n  const destinationDeck = { ...cardDecks[destinationDeckId] };\r\n\r\n  // The drag card and the cards below it.\r\n  const selectedCardList = sourceDeck.cards.splice(sourceCardIndex);\r\n\r\n  // The card above the dragged card.\r\n  const parentCardNo =\r\n    destinationDeck.cards[destinationCardIndex - 1];\r\n\r\n  // Is the cards a continuation of the card from which it was carried?\r\n  const isNextCard =\r\n    destinationCardIndex === 0 ||\r\n    selectedCardList[0] === parentCardNo + 1;\r\n\r\n  let isDragSuccessful = false;\r\n\r\n  if (isNextCard) {\r\n    destinationDeck.cards.push(...selectedCardList);\r\n    isDragSuccessful = true;\r\n\r\n    // Subtract the number of cards moved from the number of visible cards in the deck.\r\n    // If the entire deck is being moved, open the last card.\r\n    if (sourceDeck.visibleCardCount === selectedCardList.length) {\r\n      sourceDeck.visibleCardCount = 1;\r\n    } else {\r\n      sourceDeck.visibleCardCount -= selectedCardList.length;\r\n    }\r\n    destinationDeck.visibleCardCount += selectedCardList.length;\r\n  } else {\r\n    // If the drag fails, put the cards back.\r\n    sourceDeck.cards.push(...selectedCardList);\r\n  }\r\n\r\n  // Check if there is a completed deck as a result of drag.\r\n  const isThereACompletedDeck = checkCompletedDeck(\r\n    destinationDeck.cards\r\n  );\r\n\r\n  if (isThereACompletedDeck) {\r\n    destinationDeck.cards.splice(-13);\r\n    destinationDeck.visibleCardCount -=\r\n      destinationDeck.visibleCardCount === 13 ? 12 : 13;\r\n  }\r\n\r\n  return {\r\n    newCardDecks: {\r\n      ...cardDecks,\r\n      [sourceDeckId]: sourceDeck,\r\n      [destinationDeckId]: destinationDeck,\r\n    },\r\n    isThereACompletedDeck,\r\n    isDragSuccessful,\r\n  };\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Deals one new card to 10 decks.\r\n  Return value: Array\r\n  ====================================================\r\n*/\r\n\r\nexport const deal = (cardDecks, dealingCards, cannotDealSound) => {\r\n  const copyDealingDecks = [...dealingCards];\r\n\r\n  const a = Object.values(cardDecks).every(\r\n    (deck) => deck.cards.length > 0\r\n  );\r\n\r\n  if (a) {\r\n    const dealCards = copyDealingDecks.pop();\r\n\r\n    if (dealCards) {\r\n      /* eslint-disable no-param-reassign */\r\n      Object.entries(cardDecks).forEach(([, deck]) => {\r\n        deck.cards.push(dealCards.shift());\r\n        deck.visibleCardCount += 1;\r\n      });\r\n      /* eslint-enable no-param-reassign */\r\n    }\r\n  } else {\r\n    cannotDealSound.play();\r\n  }\r\n\r\n  return [{ ...cardDecks }, [...copyDealingDecks]];\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Set up decks for game start.\r\n  Return value: Array\r\n  ====================================================\r\n*/\r\n\r\nexport const getRandomDecks = () => {\r\n  const cardList = Object.entries(cardCounts)\r\n    .map(([cardType, count]) => Array(count).fill(cardNo[cardType]))\r\n    .flat();\r\n\r\n  const shuffledCardList = shuffle(cardList);\r\n\r\n  return [\r\n    {\r\n      deck1: {\r\n        cards: shuffledCardList.slice(0, 6),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck2: {\r\n        cards: shuffledCardList.slice(6, 12),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck3: {\r\n        cards: shuffledCardList.slice(12, 18),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck4: {\r\n        cards: shuffledCardList.slice(18, 24),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck5: {\r\n        cards: shuffledCardList.slice(24, 29),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck6: {\r\n        cards: shuffledCardList.slice(29, 34),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck7: {\r\n        cards: shuffledCardList.slice(34, 39),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck8: {\r\n        cards: shuffledCardList.slice(39, 44),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck9: {\r\n        cards: shuffledCardList.slice(44, 49),\r\n        visibleCardCount: 1,\r\n      },\r\n      deck10: {\r\n        cards: shuffledCardList.slice(49, 54),\r\n        visibleCardCount: 1,\r\n      },\r\n    },\r\n    // Deal decks.\r\n    [\r\n      shuffledCardList.slice(54, 64),\r\n      shuffledCardList.slice(64, 74),\r\n      shuffledCardList.slice(74, 84),\r\n      shuffledCardList.slice(84, 94),\r\n      shuffledCardList.slice(94, 104),\r\n    ],\r\n  ];\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Set up new game.\r\n  Return value: Array\r\n  ====================================================\r\n*/\r\n\r\nexport const newGame = () => {\r\n  return getRandomDecks();\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Set up new game.\r\n  Return value: Array\r\n  ====================================================\r\n*/\r\n\r\nexport const getIndexWhichNextCardsDraggable = (deck) => {\r\n  // Returns the starting index of draggable sequential cards.\r\n  // Deck: X X X 4 5 6 1 2\r\n  // Visible Cards Starting Index: 3 => X X X [4] 5 6 1 2\r\n  const visibleCardsStartingIndex =\r\n    deck.cards.length - deck.visibleCardCount;\r\n\r\n  let firstIndexOfOrderedCards = visibleCardsStartingIndex;\r\n  let nextCard;\r\n  let currentCard;\r\n\r\n  for (\r\n    let i = visibleCardsStartingIndex;\r\n    i < deck.cards.length;\r\n    i += 1\r\n  ) {\r\n    currentCard = deck.cards[i];\r\n    nextCard = deck.cards[i + 1];\r\n\r\n    if (nextCard && currentCard + 1 !== nextCard) {\r\n      firstIndexOfOrderedCards = i + 1;\r\n    }\r\n  }\r\n\r\n  return firstIndexOfOrderedCards;\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Returns the starting index of the draggable cards of all decks.\r\n  Return value: Array\r\n  ====================================================\r\n*/\r\n\r\nexport const getOrderedCardListsFromDecks = (cardDecks) => {\r\n  const orderedCardListsFromDecks = [];\r\n\r\n  Object.entries(cardDecks).forEach(([, deck]) => {\r\n    orderedCardListsFromDecks.push({\r\n      startingIndex: getIndexWhichNextCardsDraggable(deck),\r\n      cards: deck.cards.slice(getIndexWhichNextCardsDraggable(deck)),\r\n    });\r\n  });\r\n\r\n  return orderedCardListsFromDecks;\r\n};\r\n\r\n/*\r\n  ====================================================\r\n  Shows hints of cards that can be played.\r\n  Return value: Array\r\n  ====================================================\r\n*/\r\n\r\nexport const getHint = (cardDecks) => {\r\n  const orderedCardLists = getOrderedCardListsFromDecks(cardDecks);\r\n  const hints = [];\r\n\r\n  // For draggable cards of the 10 source decks.\r\n  for (\r\n    let sourceDeckNo = 0;\r\n    sourceDeckNo < orderedCardLists.length;\r\n    sourceDeckNo += 1\r\n  ) {\r\n    const sourceDeck = orderedCardLists[sourceDeckNo];\r\n\r\n    // For sub draggable cards.\r\n    for (\r\n      let subSourceDeckStartingIndex = 0;\r\n      subSourceDeckStartingIndex < sourceDeck.cards.length;\r\n      subSourceDeckStartingIndex += 1\r\n    ) {\r\n      // For destination decks.\r\n      for (\r\n        let destinationDeckNo = 0;\r\n        destinationDeckNo < orderedCardLists.length;\r\n        destinationDeckNo += 1\r\n      ) {\r\n        const destinationDeck = orderedCardLists[destinationDeckNo];\r\n\r\n        // (a && b && c) || (a && b') = (a && b') || (a && c)\r\n        // a : the first card of the deck to be dragged must match the last card of destination\r\n        // b : the parent of the child deck to be dragged must be the same as the parent of the destination\r\n        // c : the deck containing the sub-deck to be dragged must be shorter than the destination deck\r\n\r\n        // Note: The reason I use \".slice(-1)[0]\" to get the last element is because .at() in JEST throws an error.\r\n        if (\r\n          (sourceDeck.cards.slice(subSourceDeckStartingIndex)[0] ===\r\n            destinationDeck.cards.slice(-1)[0] + 1 &&\r\n            sourceDeck.cards[subSourceDeckStartingIndex - 1] !==\r\n              destinationDeck.cards.slice(-1)[0]) ||\r\n          (sourceDeck.cards.slice(subSourceDeckStartingIndex)[0] ===\r\n            destinationDeck.cards.slice(-1)[0] + 1 &&\r\n            destinationDeck.cards.length > subSourceDeckStartingIndex)\r\n        ) {\r\n          hints.push({\r\n            sourceDeckId: `deck${sourceDeckNo + 1}`,\r\n            destinationDeckId: `deck${destinationDeckNo + 1}`,\r\n            sourceStartingIndex:\r\n              sourceDeck.startingIndex + subSourceDeckStartingIndex,\r\n            destinationStartingIndex: destinationDeck.startingIndex,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Mixes hints and randomly picks one\r\n  return shuffle(hints)[0];\r\n};\r\n","export default __webpack_public_path__ + \"static/media/card-back.6ac6f05d.webp\";","export default __webpack_public_path__ + \"static/media/1.9ff91e18.webp\";","export default __webpack_public_path__ + \"static/media/2.4f8109e5.webp\";","export default __webpack_public_path__ + \"static/media/3.16b7a3a8.webp\";","export default __webpack_public_path__ + \"static/media/4.045ab1ef.webp\";","export default __webpack_public_path__ + \"static/media/5.ff1357b2.webp\";","export default __webpack_public_path__ + \"static/media/6.b268e2f4.webp\";","export default __webpack_public_path__ + \"static/media/7.ffb8dc20.webp\";","export default __webpack_public_path__ + \"static/media/8.8bfd9f02.webp\";","export default __webpack_public_path__ + \"static/media/9.db441ad5.webp\";","export default __webpack_public_path__ + \"static/media/10.c2721a7a.webp\";","export default __webpack_public_path__ + \"static/media/11.1defe000.webp\";","export default __webpack_public_path__ + \"static/media/12.4396ddf4.webp\";","export default __webpack_public_path__ + \"static/media/13.c59c5592.webp\";","// Libraries\r\nimport React, { useState, useEffect, createContext } from 'react';\r\n// Components | Utils\r\nimport { getRandomDecks } from '../utils/cardUtils';\r\n\r\nexport const GameContext = createContext();\r\n\r\nconst GameContextProvider = (props) => {\r\n  const { children } = props;\r\n\r\n  const [cardDecks, setCardDecks] = useState({\r\n    deck1: {},\r\n    deck2: {},\r\n    deck3: {},\r\n    deck4: {},\r\n    deck5: {},\r\n    deck6: {},\r\n    deck7: {},\r\n    deck8: {},\r\n    deck9: {},\r\n    deck10: {},\r\n  });\r\n  const [dealingDecks, setDealingDecks] = useState([]);\r\n  const [isAnyDragging, setIsAnyDragging] = useState(false);\r\n  const [gameStats, setGameStats] = useState({\r\n    completedDeckCount: 0,\r\n    score: 500,\r\n    moves: 0,\r\n  });\r\n\r\n  /*\r\n  ====================================================\r\n  ================== USE EFFECT ======================\r\n  ====================================================\r\n  */\r\n\r\n  useEffect(() => {\r\n    const [cDecks, dDecks] = getRandomDecks();\r\n    setCardDecks(cDecks);\r\n    setDealingDecks(dDecks);\r\n  }, []);\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        cardDecks,\r\n        setCardDecks,\r\n        isAnyDragging,\r\n        setIsAnyDragging,\r\n        dealingDecks,\r\n        setDealingDecks,\r\n        gameStats,\r\n        setGameStats,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GameContextProvider;\r\n","// Libraries\r\nimport React, { useState, createContext } from 'react';\r\n\r\nexport const DesktopContext = createContext();\r\n\r\nconst DesktopContextProvider = (props) => {\r\n  const { children } = props;\r\n\r\n  const [isGameRunning, setIsGameRunning] = useState(false);\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <DesktopContext.Provider\r\n      value={{ isGameRunning, setIsGameRunning }}\r\n    >\r\n      {children}\r\n    </DesktopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DesktopContextProvider;\r\n","// Libraries\r\nimport React, { useState, useEffect, createContext } from 'react';\r\n\r\nexport const HintContext = createContext();\r\n\r\nconst HintContextProvider = (props) => {\r\n  const { children } = props;\r\n\r\n  const [hint, setHint] = useState({});\r\n\r\n  /*\r\n  ====================================================\r\n  ================== USE EFFECT ======================\r\n  ====================================================\r\n  */\r\n\r\n  useEffect(() => {\r\n    let timeout;\r\n    if (Object.keys(hint).length > 0) {\r\n      timeout = setTimeout(() => {\r\n        setHint({});\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [hint]);\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <HintContext.Provider\r\n      value={{\r\n        hint,\r\n        setHint,\r\n      }}\r\n    >\r\n      {children}\r\n    </HintContext.Provider>\r\n  );\r\n};\r\n\r\nexport default HintContextProvider;\r\n","// Libraries\r\nimport React, { useState, createContext } from 'react';\r\n\r\nexport const DraggingContext = createContext();\r\n\r\nconst DraggingContextProvider = (props) => {\r\n  const { children } = props;\r\n\r\n  const [indicesOfSelectedCards, setIndicesOfSelectedCards] =\r\n    useState({\r\n      deckId: '',\r\n      items: [],\r\n    });\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <DraggingContext.Provider\r\n      value={{\r\n        indicesOfSelectedCards,\r\n        setIndicesOfSelectedCards,\r\n      }}\r\n    >\r\n      {children}\r\n    </DraggingContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DraggingContextProvider;\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Assets\r\nimport { styledComponents } from '../../../globalStyles';\r\n\r\nexport const Menu = styled.div`\r\n  background-color: #ece9d8;\r\n  display: flex;\r\n  font-size: 11px;\r\n`;\r\n\r\nexport const MenuItem = styled.div`\r\n  display: flex;\r\n  padding: 3px 5px;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    background-color: #316ac5;\r\n\r\n    & > button {\r\n      color: white;\r\n    }\r\n\r\n    div {\r\n      display: flex;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MenuButton = styled(styledComponents.Button)`\r\n  color: black;\r\n  font-size: 11px;\r\n  text-align: left;\r\n\r\n  :hover + div {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const MenuContent = styled.div`\r\n  background-color: white;\r\n  border: 1px solid gray;\r\n  display: none;\r\n  flex-direction: column;\r\n  left: 0;\r\n  padding: 1px;\r\n  position: absolute;\r\n  top: 20px;\r\n  width: 200px;\r\n  z-index: 5;\r\n`;\r\n\r\nexport const SubMenuButton = styled(styledComponents.Button)`\r\n  color: black;\r\n  font-size: 11px;\r\n  padding: 2px 2px 4px 12px;\r\n  text-align: left;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: #316ac5;\r\n    color: white;\r\n  }\r\n`;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport { GameContext } from '../../../contexts/GameContext';\r\nimport getSounds from '../../../utils/soundUtils';\r\nimport { deal, newGame } from '../../../utils/cardUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst WindowMenu = () => {\r\n  const {\r\n    cardDecks,\r\n    setCardDecks,\r\n    dealingDecks,\r\n    setDealingDecks,\r\n    setGameStats,\r\n  } = useContext(GameContext);\r\n\r\n  const [cannotDealSound, dealSound] = getSounds(\r\n    'cannot-deal',\r\n    'deal'\r\n  );\r\n\r\n  /*\r\n  ====================================================\r\n  =================== HANDLER ========================\r\n  ====================================================\r\n  */\r\n\r\n  const handleDealClick = () => {\r\n    dealSound.play();\r\n    const [returnedCardDecks, returnDealingDecks] = deal(\r\n      cardDecks,\r\n      dealingDecks,\r\n      cannotDealSound\r\n    );\r\n    setCardDecks(returnedCardDecks);\r\n    setDealingDecks(returnDealingDecks);\r\n  };\r\n\r\n  const handleNewGameClick = () => {\r\n    const [cDecks, dDecks] = newGame();\r\n    setCardDecks(cDecks);\r\n    setDealingDecks(dDecks);\r\n    setGameStats({\r\n      completedDeckCount: 0,\r\n      score: 500,\r\n      moves: 0,\r\n    });\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.Menu>\r\n      <Styled.MenuItem>\r\n        <Styled.MenuButton>Game</Styled.MenuButton>\r\n        <Styled.MenuContent>\r\n          <Styled.SubMenuButton onClick={handleNewGameClick}>\r\n            New Game\r\n          </Styled.SubMenuButton>\r\n        </Styled.MenuContent>\r\n      </Styled.MenuItem>\r\n      <Styled.MenuItem>\r\n        <Styled.MenuButton\r\n          onClick={handleDealClick}\r\n          disabled={dealingDecks.length === 0}\r\n        >\r\n          Deal!\r\n        </Styled.MenuButton>\r\n      </Styled.MenuItem>\r\n    </Styled.Menu>\r\n  );\r\n};\r\n\r\nexport default WindowMenu;\r\n","export default __webpack_public_path__ + \"static/media/close.c7e9aa2a.webp\";","export default __webpack_public_path__ + \"static/media/close-hover.7a6651df.webp\";","export default __webpack_public_path__ + \"static/media/close-active.f788ade2.webp\";","// Libraries\r\nimport styled from 'styled-components';\r\n// Components | Utils\r\nimport { styledComponents } from '../../../globalStyles';\r\n// Assets\r\nimport CloseSVG from '../../../assets/images/close.webp';\r\nimport CloseHoverSVG from '../../../assets/images/close-hover.webp';\r\nimport CloseActiveSVG from '../../../assets/images/close-active.webp';\r\n\r\nexport const Window = styled.div`\r\n  background-color: ${(props) => props.theme.colors.xpWindowBg};\r\n  display: grid;\r\n  grid-template-rows: 30px 20px 1fr;\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const TitleBar = styled.div`\r\n  align-items: center;\r\n  background: ${(props) => props.theme.gradients.titleBarBg};\r\n  color: ${(props) => props.theme.colors.titleBarText};\r\n  display: flex;\r\n  font-family: 'Trebuchet MS';\r\n  font-size: 13px;\r\n  padding: 6px;\r\n\r\n  img {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const CloseButton = styled(styledComponents.Button)`\r\n  background-image: url(${CloseSVG});\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  height: 23px;\r\n  margin-left: auto;\r\n  width: 23px;\r\n\r\n  &:hover {\r\n    background-image: url(${CloseHoverSVG});\r\n  }\r\n\r\n  &:not(:disabled):active {\r\n    background-image: url(${CloseActiveSVG});\r\n  }\r\n`;\r\n\r\nexport const WindowBody = styled.div`\r\n  height: 100%;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/solitaire-icon.949145f2.webp\";","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport { DesktopContext } from '../../../contexts/DesktopContext';\r\nimport WindowMenu from '../WindowMenu';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\r\n\r\nconst Window = (props) => {\r\n  const { children, title } = props;\r\n\r\n  const { setIsGameRunning } = useContext(DesktopContext);\r\n\r\n  /*\r\n  ====================================================\r\n  =================== HANDLER ========================\r\n  ====================================================\r\n  */\r\n\r\n  const handleCloseClick = () => {\r\n    setIsGameRunning(false);\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.Window>\r\n      <Styled.TitleBar>\r\n        <img src={SolitaireIcon} alt=\"solitaire icon\" />\r\n        <span>{title}</span>\r\n        <Styled.CloseButton onClick={handleCloseClick} />\r\n      </Styled.TitleBar>\r\n      <WindowMenu />\r\n      <Styled.WindowBody>{children}</Styled.WindowBody>\r\n    </Styled.Window>\r\n  );\r\n};\r\n\r\nexport default Window;\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Components | Utils\r\nimport { styledComponents } from '../../../globalStyles';\r\n// Assets\r\nimport Close from '../../../assets/images/close.webp';\r\nimport CloseHover from '../../../assets/images/close-hover.webp';\r\nimport CloseActive from '../../../assets/images/close-active.webp';\r\n\r\nexport const WinScreen = styled.div`\r\n  animation: ${(props) => props.theme.keyFrames.colorChange} 10s\r\n    infinite;\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 4rem;\r\n  font-weight: bold;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Window = styled.div`\r\n  background-color: ${(props) => props.theme.colors.xpWindowBg};\r\n  bottom: 10px;\r\n  border-top-left-radius: 13px;\r\n  border-top-right-radius: 13px;\r\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n  display: grid;\r\n  grid-template-rows: 30px 1fr;\r\n  height: 150px;\r\n  left: 0;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  right: 0;\r\n  width: 300px;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const TitleBar = styled.div`\r\n  align-items: center;\r\n  background: ${(props) => props.theme.gradients.titleBarBg};\r\n  color: ${(props) => props.theme.colors.titleBarText};\r\n  display: flex;\r\n  font-family: 'Trebuchet MS';\r\n  font-size: 13px;\r\n  padding: 6px 15px;\r\n\r\n  img {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const CloseButton = styled(styledComponents.Button)`\r\n  background-image: url(${Close});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  height: 16px;\r\n  margin-left: auto;\r\n  width: 16px;\r\n\r\n  &:hover {\r\n    background-image: url(${CloseHover});\r\n  }\r\n\r\n  &:not(:disabled):active {\r\n    background-image: url(${CloseActive});\r\n  }\r\n`;\r\n\r\nexport const WindowBody = styled.div`\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.colors.windowBorder};\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.7rem;\r\n  gap: 10px;\r\n  height: 100%;\r\n  text-align: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const WindowContent = styled.div`\r\n  background-color: ${(props) => props.theme.colors.xpWindowBg};\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.6rem;\r\n  gap: 8px;\r\n  margin-top: 10px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  text-align: center;\r\n\r\n  p {\r\n    line-height: 0.9rem;\r\n  }\r\n\r\n  button {\r\n    background-color: ${(props) => props.theme.colors.buttonBg};\r\n    border: 1px solid black;\r\n    border-radius: 3px;\r\n    color: ${(props) => props.theme.colors.buttonText};\r\n    font-size: 0.55rem;\r\n    height: 20px;\r\n    margin: 0 auto;\r\n    width: 60px;\r\n\r\n    &:hover {\r\n      box-shadow: ${(props) =>\r\n        props.theme.boxShadows.windowButton$hover};\r\n    }\r\n\r\n    &:active {\r\n      box-shadow: ${(props) =>\r\n        props.theme.boxShadows.windowButton$active};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const YesButton = styled(styledComponents.Button)`\r\n  background-color: ${(props) => props.theme.colors.buttonBg};\r\n  border: 1px solid black;\r\n  border-radius: 3px;\r\n  color: ${(props) => props.theme.colors.buttonText};\r\n  font-size: 0.55rem;\r\n  height: 20px;\r\n  margin: 0 auto;\r\n  width: 60px;\r\n\r\n  &:hover {\r\n    box-shadow: ${(props) =>\r\n      props.theme.boxShadows.windowButton$hover};\r\n  }\r\n\r\n  &:active {\r\n    box-shadow: ${(props) =>\r\n      props.theme.boxShadows.windowButton$active};\r\n  }\r\n`;\r\n","// Libraries\r\nimport React, { useContext, useEffect } from 'react';\r\n// Components | Utils\r\nimport { UserContext } from '../../../contexts/UserContext';\r\nimport { newGame } from '../../../utils/cardUtils';\r\nimport getSounds from '../../../utils/soundUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport { DesktopContext } from '../../../contexts/DesktopContext';\r\n\r\nconst GameOver = (props) => {\r\n  const { setCardDecks, setDealingDecks, gameStats, setGameStats } =\r\n    props;\r\n\r\n  const { setIsGameRunning } = useContext(DesktopContext);\r\n  const { user } = useContext(UserContext);\r\n  const [winSound] = getSounds('win');\r\n\r\n  /*\r\n  ====================================================\r\n  ================== USE EFFECT ======================\r\n  ====================================================\r\n  */\r\n\r\n  useEffect(() => {\r\n    winSound.play();\r\n  }, []);\r\n\r\n  /*\r\n  ====================================================\r\n  =================== HANDLER ========================\r\n  ====================================================\r\n  */\r\n\r\n  const handleNewGameClick = () => {\r\n    const [cDecks, dDecks] = newGame();\r\n    setCardDecks(cDecks);\r\n    setDealingDecks(dDecks);\r\n    setGameStats({\r\n      completedDeckCount: 0,\r\n      score: 500,\r\n      moves: 0,\r\n    });\r\n  };\r\n\r\n  const handleCloseClick = () => {\r\n    setIsGameRunning(false);\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  =================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <>\r\n      <Styled.WinScreen>\r\n        <span>You Won!</span>\r\n      </Styled.WinScreen>\r\n\r\n      <Styled.Window>\r\n        <Styled.TitleBar>\r\n          <span>Game Over</span>\r\n          <Styled.CloseButton onClick={handleCloseClick} />\r\n        </Styled.TitleBar>\r\n\r\n        <Styled.WindowBody>\r\n          <p>\r\n            Congratulations {user.username}!\r\n            <br />\r\n            You won with {gameStats?.score} points in{' '}\r\n            {gameStats?.moves} moves.\r\n          </p>\r\n          <p> Do you want to start another game?</p>\r\n          <Styled.YesButton onClick={handleNewGameClick}>\r\n            Yes\r\n          </Styled.YesButton>\r\n        </Styled.WindowBody>\r\n      </Styled.Window>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(GameOver);\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n\r\nexport const CardContainer = styled.div`\r\n  z-index: 1;\r\n`;\r\n","// Libraries\r\nimport React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n// Components | Utils\r\nimport { cardImages } from '../../../utils/cardUtils';\r\nimport getSounds from '../../../utils/soundUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst Card = (props) => {\r\n  const {\r\n    index,\r\n    deckNo,\r\n    cardNo,\r\n    isClose,\r\n    isDragDisabled,\r\n    isInSelectedCards,\r\n    isSourceInHint,\r\n    isDestinationInHint,\r\n  } = props;\r\n\r\n  const [mouseDownSound] = getSounds('mouse-down');\r\n\r\n  const handleMouseDownFromCard = (e) => {\r\n    e.preventDefault();\r\n    mouseDownSound.play();\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== FUNCTIONS =====================\r\n  ====================================================\r\n  */\r\n\r\n  function getStyle(style, snapshot) {\r\n    /* \r\n    This function overrides the default gliding behavior of the react-beautiful-dnd \r\n    package when the drag is above the other draggable object.\r\n    */\r\n    if (snapshot.isDropAnimating) {\r\n      return {\r\n        ...style,\r\n        // cannot be 0, but make it super tiny\r\n        transitionDuration: '0.001s',\r\n      };\r\n    }\r\n\r\n    if (snapshot.isDragging) {\r\n      // We do not apply it to the being dragged object so that the drag behavior can continue.\r\n      return style;\r\n    }\r\n\r\n    if (isInSelectedCards) {\r\n      return {\r\n        ...style,\r\n        display: 'none',\r\n        // We ovveride the \"translate(... px)\" that performs the sliding behavior as \"none\".\r\n        transform: 'none',\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...style,\r\n      // We ovveride the \"translate(... px)\" that performs the sliding behavior as \"none\".\r\n      transform: 'none',\r\n      filter:\r\n        isSourceInHint || isDestinationInHint ? 'invert(100%)' : '',\r\n      transition: isDestinationInHint ? 'filter 400ms 300ms' : '',\r\n    };\r\n  }\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return deckNo ? (\r\n    <Draggable\r\n      draggableId={`deck${deckNo}${index}`}\r\n      index={index}\r\n      isDragDisabled={isDragDisabled}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <Styled.CardContainer\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            style={getStyle(provided.draggableProps.style, snapshot)}\r\n            onMouseDown={\r\n              !isDragDisabled ? handleMouseDownFromCard : undefined\r\n            }\r\n          >\r\n            <div className=\"card\">\r\n              <img\r\n                draggable={false} // Removes the preview created by dragging and holding the image.\r\n                src={isClose ? cardImages[0] : cardImages[cardNo]}\r\n                alt=\"card\"\r\n              />\r\n            </div>\r\n          </Styled.CardContainer>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  ) : (\r\n    <div className=\"card\">\r\n      <img\r\n        draggable={false} // Removes the preview created by dragging and holding the image.\r\n        src={isClose ? cardImages[0] : cardImages[cardNo]}\r\n        alt=\"card\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Card);\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n\r\nexport const Deck = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${(props) => props.deckLength + 5},\r\n    min(16px, 2.5vw)\r\n  );\r\n  height: fit-content;\r\n  justify-self: center;\r\n  max-width: 71px;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    grid-template-rows: repeat(\r\n      ${(props) => props.deckLength + 5},\r\n      min(17px, 3vh)\r\n    );\r\n  }\r\n`;\r\n\r\nexport const Placeholder = styled.div`\r\n  border-radius: 4px;\r\n  box-shadow: ${(props) => props.theme.boxShadows.emptyDeck};\r\n  display: grid;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 0;\r\n\r\n  & > * {\r\n    grid-area: 1/1;\r\n  }\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n  z-index: 1;\r\n`;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n// Components | Utils\r\nimport { DraggingContext } from '../../../contexts/DraggingContext';\r\nimport { HintContext } from '../../../contexts/HintContext';\r\nimport Card from '../Card/index';\r\nimport { getIndexWhichNextCardsDraggable } from '../../../utils/cardUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst Deck = (props) => {\r\n  const { deckNo, deck } = props;\r\n\r\n  const { indicesOfSelectedCards } = useContext(DraggingContext);\r\n  const { hint } = useContext(HintContext);\r\n\r\n  let indexWhichNextCardsDraggable;\r\n\r\n  if ('cards' in deck) {\r\n    indexWhichNextCardsDraggable =\r\n      getIndexWhichNextCardsDraggable(deck);\r\n  }\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    'cards' in deck && (\r\n      <Droppable droppableId={`deck${deckNo}`}>\r\n        {(provided) => (\r\n          <Styled.Deck\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            deckLength={deck.cards.length}\r\n          >\r\n            <Styled.Placeholder>\r\n              <svg data-testid=\"deneme\" viewBox=\"0 0 71 96\" />\r\n            </Styled.Placeholder>\r\n            {deck.cards.map((value, index) => {\r\n              return (\r\n                <Card\r\n                  key={`deck${deckNo}${index}`}\r\n                  index={index}\r\n                  deckNo={deckNo}\r\n                  cardNo={value}\r\n                  isClose={\r\n                    index < deck.cards.length - deck.visibleCardCount\r\n                  }\r\n                  isDragDisabled={\r\n                    index < indexWhichNextCardsDraggable\r\n                  }\r\n                  isInSelectedCards={\r\n                    indicesOfSelectedCards.deckId ===\r\n                      `deck${deckNo}` &&\r\n                    indicesOfSelectedCards.items\r\n                      .slice(1)\r\n                      .includes(index)\r\n                  }\r\n                  isDestinationInHint={\r\n                    hint.destinationDeckId === `deck${deckNo}` &&\r\n                    hint.destinationStartingIndex <= index\r\n                  }\r\n                  isSourceInHint={\r\n                    hint.sourceDeckId === `deck${deckNo}` &&\r\n                    hint.sourceStartingIndex <= index\r\n                  }\r\n                />\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </Styled.Deck>\r\n        )}\r\n      </Droppable>\r\n    )\r\n  );\r\n};\r\n\r\nexport default React.memo(Deck);\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n\r\nexport const DeckArea = styled.div`\r\n  display: grid;\r\n  gap: 0.4vw;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  justify-content: space-evenly;\r\n  padding: 0 0.9vw;\r\n\r\n  .card {\r\n    height: 100%;\r\n    width: auto;\r\n\r\n    img {\r\n      height: auto;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    grid-template-rows: 1fr;\r\n  }\r\n`;\r\n\r\nexport const CardDeckContainer = styled.div`\r\n  height: fit-content;\r\n`;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n// Components | Utils\r\nimport { GameContext } from '../../../contexts/GameContext';\r\nimport { DraggingContext } from '../../../contexts/DraggingContext';\r\nimport Deck from '../Deck';\r\nimport { moveCards } from '../../../utils/cardUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst DeckArea = () => {\r\n  const { cardDecks, gameStats, setGameStats, setCardDecks } =\r\n    useContext(GameContext);\r\n  const { setIndicesOfSelectedCards } = useContext(DraggingContext);\r\n\r\n  /*\r\n  ====================================================\r\n  =================== HANDLER ========================\r\n  ====================================================\r\n  */\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    // Cards saved during drag are cleared.\r\n    setIndicesOfSelectedCards({\r\n      deckId: '',\r\n      items: [],\r\n    });\r\n\r\n    // Saves dragged cards.\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    const sourceDeckId = source.droppableId;\r\n    const destinationDeckId = destination.droppableId;\r\n\r\n    // Do nothing if the deck from which the card was drawn is the\r\n    // same as the deck it was dragged into.\r\n    if (sourceDeckId === destinationDeckId) {\r\n      return;\r\n    }\r\n\r\n    const { newCardDecks, isThereACompletedDeck, isDragSuccessful } =\r\n      moveCards(cardDecks, source, destination);\r\n\r\n    // Update list if drag is successful.\r\n    if (isDragSuccessful) {\r\n      const previousGameStats = { ...gameStats };\r\n      previousGameStats.moves += 1;\r\n      previousGameStats.score -= 1;\r\n\r\n      if (isThereACompletedDeck) {\r\n        previousGameStats.completedDeckCount += 1;\r\n        previousGameStats.score += 100;\r\n      }\r\n\r\n      setGameStats(previousGameStats);\r\n      setCardDecks(newCardDecks);\r\n    }\r\n  };\r\n\r\n  const handleOnDragStart = (result) => {\r\n    const { source } = result;\r\n\r\n    const sourceCardIndex = source.index;\r\n    const sourceDeckId = source.droppableId;\r\n    const sourceDeck = { ...cardDecks[sourceDeckId] };\r\n\r\n    // Saves dragged cards.\r\n    setIndicesOfSelectedCards({\r\n      deckId: sourceDeckId,\r\n      items: Array.from(\r\n        {\r\n          length: sourceDeck.cards.length - sourceCardIndex,\r\n        },\r\n        (_, i) => i + sourceCardIndex\r\n      ),\r\n    });\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={handleOnDragEnd}\r\n      onDragStart={handleOnDragStart}\r\n    >\r\n      <Styled.DeckArea>\r\n        {Array.from({ length: 10 }, (_, i) => i + 1).map((no) => (\r\n          <Deck key={no} deckNo={no} deck={cardDecks[`deck${no}`]} />\r\n        ))}\r\n      </Styled.DeckArea>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default DeckArea;\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n\r\nexport const CompletedDeckArea = styled.div`\r\n  width: 110px;\r\n  height: 100%;\r\n  display: inline-flex;\r\n\r\n  .card {\r\n    &:not(:first-child) {\r\n      margin-left: -30px;\r\n\r\n      @media (min-width: ${(props) =>\r\n          props.theme.breakpoints.smallTablet}) {\r\n        margin-left: -62px;\r\n      }\r\n    }\r\n\r\n    img {\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n","// Libraries\r\nimport React from 'react';\r\n// Components | Utils\r\nimport Card from '../Card';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst CompletedDeckArea = (props) => {\r\n  const { completedDeckCount } = props;\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.CompletedDeckArea>\r\n      {React.Children.toArray(\r\n        Array(completedDeckCount).fill(<Card cardNo={1} />)\r\n      )}\r\n    </Styled.CompletedDeckArea>\r\n  );\r\n};\r\n\r\nexport default React.memo(CompletedDeckArea);\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Assets\r\nimport ClickableCursor from '../../../assets/cursors/clickable.cur';\r\n\r\nexport const HintArea = styled.div`\r\n  background-color: green;\r\n  border: 1px solid black;\r\n  color: white;\r\n  cursor: url(${ClickableCursor}), pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  font-size: 0.5rem;\r\n  height: 100%;\r\n  justify-content: center;\r\n  margin: 0 10px;\r\n  max-width: 130px;\r\n  min-width: 100px;\r\n  padding: 7px;\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    font-size: 0.8rem;\r\n    max-width: 180px;\r\n  }\r\n`;\r\n\r\nexport const Hint = styled.div`\r\n  background-color: green;\r\n  display: flex;\r\n  gap: 10px;\r\n  padding: 2px;\r\n\r\n  span {\r\n    display: inline-block;\r\n    width: 50%;\r\n\r\n    &:first-of-type {\r\n      text-align: right;\r\n    }\r\n  }\r\n`;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport { HintContext } from '../../../contexts/HintContext';\r\nimport { getHint } from '../../../utils/cardUtils';\r\nimport getSounds from '../../../utils/soundUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst HintArea = (props) => {\r\n  const { cardDecks, gameStats, setGameStats } = props;\r\n\r\n  const { setHint } = useContext(HintContext);\r\n\r\n  const [hintSound, noHintSound] = getSounds('hint', 'no-hint');\r\n\r\n  /*\r\n  ====================================================\r\n  =================== HANDLER ========================\r\n  ====================================================\r\n  */\r\n\r\n  const handleHintClick = () => {\r\n    const hint = getHint(cardDecks);\r\n\r\n    if (hint) {\r\n      hintSound.play();\r\n      setHint({\r\n        sourceDeckId: hint.sourceDeckId,\r\n        sourceStartingIndex: hint.sourceStartingIndex,\r\n        destinationDeckId: hint.destinationDeckId,\r\n        destinationStartingIndex: hint.destinationStartingIndex,\r\n      });\r\n\r\n      const previousGameStats = { ...gameStats };\r\n      previousGameStats.score -= 10;\r\n\r\n      setGameStats(previousGameStats);\r\n    } else {\r\n      noHintSound.play();\r\n    }\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  =================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.HintArea onClick={handleHintClick} data-cy=\"hint-area\">\r\n      <Styled.Hint>\r\n        <span>Score:</span>\r\n        <span data-cy=\"score-span\">{gameStats?.score}</span>\r\n      </Styled.Hint>\r\n      <Styled.Hint>\r\n        <span>Moves:</span>\r\n        <span data-cy=\"moves-span\">{gameStats?.moves}</span>\r\n      </Styled.Hint>\r\n    </Styled.HintArea>\r\n  );\r\n};\r\n\r\nexport default React.memo(HintArea);\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Assets\r\nimport ClickableCursor from '../../../assets/cursors/clickable.cur';\r\n\r\nexport const DealArea = styled.div`\r\n  cursor: ${(props) =>\r\n    props.dealingDecksLength > 0 &&\r\n    `url(${ClickableCursor}), pointer`};\r\n  display: inline-flex;\r\n  flex-direction: row-reverse;\r\n  height: 100%;\r\n  width: 110px;\r\n\r\n  .card {\r\n    &:not(:last-child) {\r\n      margin-left: -30px;\r\n\r\n      @media (min-width: ${(props) =>\r\n          props.theme.breakpoints.smallTablet}) {\r\n        margin-left: -62px;\r\n      }\r\n    }\r\n\r\n    img {\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport Card from '../Card';\r\nimport { deal } from '../../../utils/cardUtils';\r\nimport getSounds from '../../../utils/soundUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport { GameContext } from '../../../contexts/GameContext';\r\n\r\nconst DealArea = (props) => {\r\n  const { setCardDecks, cardDecks } = props;\r\n  const [cannotDealSound, dealSound] = getSounds(\r\n    'cannot-deal',\r\n    'deal'\r\n  );\r\n  const { dealingDecks, setDealingDecks } = useContext(GameContext);\r\n  /*\r\n  ====================================================\r\n  =================== HANDLER ========================\r\n  ====================================================\r\n  */\r\n\r\n  const handleDealClick = () => {\r\n    dealSound.play();\r\n\r\n    const [returnCardDecks, returnDealingDecks] = deal(\r\n      cardDecks,\r\n      dealingDecks,\r\n      cannotDealSound\r\n    );\r\n\r\n    setCardDecks(returnCardDecks);\r\n    setDealingDecks(returnDealingDecks);\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  =================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.DealArea\r\n      data-cy=\"deal-area\"\r\n      onClick={dealingDecks.length ? handleDealClick : undefined}\r\n      dealingDecksLength={dealingDecks.length}\r\n    >\r\n      {React.Children.toArray(\r\n        Array(dealingDecks.length).fill(<Card isClose />)\r\n      )}\r\n    </Styled.DealArea>\r\n  );\r\n};\r\n\r\nexport default React.memo(DealArea);\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n\r\nexport const Board = styled.div`\r\n  background-image: url(${`${process.env.PUBLIC_URL}/solitaire-background.webp`});\r\n  background-size: fill;\r\n  display: grid;\r\n  grid-template-rows: 1fr 50px;\r\n  height: 100%;\r\n  padding: 10px;\r\n  position: relative;\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    grid-template-rows: 1fr 100px;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nexport const BottomArea = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 50px;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${(props) =>\r\n      props.theme.breakpoints.smallTablet}) {\r\n    height: 100px;\r\n  }\r\n`;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport HintContextProvider from '../../contexts/HintContext';\r\nimport DraggingContextProvider from '../../contexts/DraggingContext';\r\nimport { GameContext } from '../../contexts/GameContext';\r\nimport Window from '../../components/PreGame/Window';\r\nimport GameOver from '../../components/Game/GameOver';\r\nimport DeckArea from '../../components/Game/DeckArea';\r\nimport CompletedDeckArea from '../../components/Game/CompletedArea';\r\nimport HintArea from '../../components/Game/HintArea';\r\nimport DealArea from '../../components/Game/DealArea';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst SolitaireGame = () => {\r\n  const {\r\n    setDealingDecks,\r\n    cardDecks,\r\n    setCardDecks,\r\n    gameStats,\r\n    setGameStats,\r\n  } = useContext(GameContext);\r\n\r\n  /*\r\n  ====================================================\r\n  =================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <DraggingContextProvider>\r\n      <HintContextProvider>\r\n        <Window title=\"Spider Solitaire\">\r\n          <Styled.Board>\r\n            <DeckArea cardDecks={cardDecks} />\r\n            <Styled.BottomArea>\r\n              <CompletedDeckArea\r\n                completedDeckCount={gameStats.completedDeckCount}\r\n              />\r\n              <HintArea\r\n                cardDecks={cardDecks}\r\n                gameStats={gameStats}\r\n                setGameStats={setGameStats}\r\n              />\r\n              <DealArea\r\n                setCardDecks={setCardDecks}\r\n                cardDecks={cardDecks}\r\n              />\r\n            </Styled.BottomArea>\r\n            {gameStats.completedDeckCount === 8 && (\r\n              <GameOver\r\n                setCardDecks={setCardDecks}\r\n                setDealingDecks={setDealingDecks}\r\n                gameStats={gameStats}\r\n                setGameStats={setGameStats}\r\n              />\r\n            )}\r\n          </Styled.Board>\r\n        </Window>\r\n      </HintContextProvider>\r\n    </DraggingContextProvider>\r\n  );\r\n};\r\n\r\nexport default SolitaireGame;\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Components | Utils\r\nimport { styledComponents } from '../../../globalStyles';\r\n\r\nexport const Program = styled(styledComponents.Button)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.7rem;\r\n  gap: 5px;\r\n  line-height: 0.8rem;\r\n  text-align: center;\r\n  width: 70px;\r\n`;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport { DesktopContext } from '../../../contexts/DesktopContext';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\r\n\r\nconst Program = () => {\r\n  const { setIsGameRunning } = useContext(DesktopContext);\r\n\r\n  /*\r\n  ====================================================\r\n  =================== HANDLER ========================\r\n  ====================================================\r\n  */\r\n\r\n  const handleProgramClick = () => {\r\n    setIsGameRunning(true);\r\n  };\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.Program\r\n      data-cy=\"spider-solitaire-program\"\r\n      onDoubleClick={handleProgramClick}\r\n      onTouchStart={handleProgramClick}\r\n    >\r\n      <img src={SolitaireIcon} alt=\"\" width=\"40\" height=\"40\" />\r\n      <span>Spider Solitaire</span>\r\n    </Styled.Program>\r\n  );\r\n};\r\n\r\nexport default Program;\r\n","/*\r\n  ====================================================\r\n  Return time to be displayed in Taskbar\r\n  Return value: String\r\n  ====================================================\r\n*/\r\n\r\nexport default function getTimeAsAMPM() {\r\n  const date = new Date();\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n  const ampm = hours >= 12 ? 'PM' : 'AM';\r\n  hours %= 12;\r\n  hours = hours || 12;\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n  const strTime = `${hours}:${minutes} ${ampm}`;\r\n  return strTime;\r\n}\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n\r\nexport const Toolbar = styled.div`\r\n  align-items: center;\r\n  background: ${(props) => props.theme.gradients.toolbarBg};\r\n  border-left: 3px solid rgb(16, 66, 175);\r\n  color: ${(props) => props.theme.colors.toolbarText};\r\n  display: flex;\r\n  font-size: 0.65rem;\r\n  gap: 5px;\r\n  height: 100%;\r\n  padding: 4px 15px 3px 10px;\r\n  width: fit-content;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/msn-icon.75a562a3.webp\";","// Libraries\r\nimport React, { useState, useEffect } from 'react';\r\n// Components | Utils\r\nimport getTimeAsAMPM from '../../../utils/dateUtils';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport MsnIcon from '../../../assets/images/msn-icon.webp';\r\n\r\nconst Toolbar = () => {\r\n  const [time, setTime] = useState(getTimeAsAMPM());\r\n\r\n  /*\r\n  ====================================================\r\n  ================== USE EFFECT ======================\r\n  ====================================================\r\n  */\r\n\r\n  useEffect(() => {\r\n    const timeInterval = setInterval(\r\n      () => setTime(getTimeAsAMPM()),\r\n      30000\r\n    );\r\n    return () => {\r\n      clearInterval(timeInterval);\r\n    };\r\n  }, []);\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.Toolbar>\r\n      <img src={MsnIcon} alt=\"msn icon\" width=\"32\" height=\"21\" />\r\n      <span>{time}</span>\r\n    </Styled.Toolbar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n// Components | Utils\r\nimport { styledComponents } from '../../../globalStyles';\r\n\r\nexport const Taskbar = styled.section`\r\n  background: ${(props) => props.theme.gradients.taskbarBg};\r\n  display: flex;\r\n  height: 35px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const StartButton = styled(styledComponents.Button)`\r\n  &:hover {\r\n    filter: brightness(105%);\r\n  }\r\n  img {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TaskList = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  gap: 1px;\r\n  padding-left: 20px;\r\n  padding-top: 4px;\r\n`;\r\n\r\nexport const Task = styled(styledComponents.Button)`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.taskBg};\r\n  border-radius: 2px;\r\n  box-shadow: ${(props) => props.theme.boxShadows.task};\r\n  display: flex;\r\n  gap: 3px;\r\n  height: 65%;\r\n  max-width: 120px;\r\n  min-width: 100px;\r\n  padding: 4px 8px;\r\n  width: 40%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.taskBg$hover};\r\n  }\r\n\r\n  span {\r\n    font-size: 0.55rem;\r\n    line-height: 0.6rem;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/winxp-start-button.1f1eee78.webp\";","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport { DesktopContext } from '../../../contexts/DesktopContext';\r\nimport Toolbar from '../Toolbar';\r\n// Assets\r\nimport * as Styled from './styles';\r\nimport XpStartButton from '../../../assets/images/winxp-start-button.webp';\r\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\r\n\r\nconst Taskbar = () => {\r\n  const { isGameRunning } = useContext(DesktopContext);\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.Taskbar>\r\n      <Styled.StartButton>\r\n        <img\r\n          src={XpStartButton}\r\n          alt=\"win xp start\"\r\n          height=\"35\"\r\n          width=\"110\"\r\n        />\r\n      </Styled.StartButton>\r\n      <Styled.TaskList>\r\n        {isGameRunning && (\r\n          <Styled.Task>\r\n            <img\r\n              src={SolitaireIcon}\r\n              alt=\"solitaire icon\"\r\n              width=\"15\"\r\n              height=\"15\"\r\n            />\r\n            <span>Spider Solitaire</span>\r\n          </Styled.Task>\r\n        )}\r\n      </Styled.TaskList>\r\n      <Toolbar />\r\n    </Styled.Taskbar>\r\n  );\r\n};\r\n\r\nexport default Taskbar;\r\n","// Libraries\r\nimport styled from 'styled-components';\r\n\r\nexport const Desktop = styled.div`\r\n  background-image: url(${`${process.env.PUBLIC_URL}/winxp-background.webp`});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ProgramContainer = styled.main`\r\n  height: calc(100% - 35px);\r\n`;\r\n\r\nexport const ProgramList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  padding: 40px;\r\n`;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport GameContextProvider from '../../contexts/GameContext';\r\nimport { DesktopContext } from '../../contexts/DesktopContext';\r\nimport SolitaireGame from '../SolitaireGame';\r\nimport Program from '../../components/PreGame/Program';\r\nimport Taskbar from '../../components/PreGame/Taskbar';\r\n// Assets\r\nimport * as Styled from './styles';\r\n\r\nconst Desktop = () => {\r\n  const { isGameRunning } = useContext(DesktopContext);\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <Styled.Desktop>\r\n      <Styled.ProgramContainer>\r\n        {!isGameRunning ? (\r\n          <Styled.ProgramList>\r\n            <Program />\r\n          </Styled.ProgramList>\r\n        ) : (\r\n          <GameContextProvider>\r\n            <SolitaireGame />\r\n          </GameContextProvider>\r\n        )}\r\n      </Styled.ProgramContainer>\r\n      <Taskbar />\r\n    </Styled.Desktop>\r\n  );\r\n};\r\n\r\nexport default Desktop;\r\n","// Libraries\r\nimport React, { useContext } from 'react';\r\n// Components | Utils\r\nimport Introduction from './views/Introduction';\r\nimport Desktop from './views/Desktop';\r\nimport { UserContext } from './contexts/UserContext';\r\nimport DesktopContextProvider from './contexts/DesktopContext';\r\n\r\nfunction App() {\r\n  const { isUserSelected } = useContext(UserContext);\r\n\r\n  /*\r\n  ====================================================\r\n  ==================== RENDER ========================\r\n  ====================================================\r\n  */\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      {isUserSelected ? (\r\n        <DesktopContextProvider>\r\n          <Desktop />\r\n        </DesktopContextProvider>\r\n      ) : (\r\n        <Introduction />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// Libraries\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\n// Components | Utils\r\nimport UserContextProvider from './contexts/UserContext';\r\nimport App from './App';\r\n// Assets\r\nimport './index.scss';\r\nimport { theme } from './globalStyles';\r\n\r\n/* eslint-disable no-console */\r\nconsole.log(\r\n  \"%cHi, I'm Enes. Welcome to my project. You can find more at https://enesbaspinar.me. Oh by the way, feel free to look at my CV :)\",\r\n  'background: #222; color: #bada55; padding: 4px;'\r\n);\r\n/* eslint-enable no-console */\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserContextProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </UserContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}